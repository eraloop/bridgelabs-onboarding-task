{"remainingRequest":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js??ref--14-0!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/store/index.js","dependencies":[{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/store/index.js","mtime":1645102509823},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/babel.config.js","mtime":1645102509819},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/cache-loader/dist/cjs.js","mtime":1633440985628},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js","mtime":1636424682299},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js","mtime":1633441000112}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VyYS9EZXNrdG9wL0JyaWRnZUxhYnMvYnJpZGdlbGFicy1vbmJvYXJkaW5nLXRhc2svbG9naW4tbG9nb3V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IFJlZ2lzdGVyU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9yZWdpc3Rlcic7CmltcG9ydCBMb2dpblNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvbG9naW4nOwppbXBvcnQgTG9nb3V0U2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9sb2dvdXQnOwppbXBvcnQgVG9rZW5TZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL3N0b3JhZ2UnOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlcic7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgdmlld19uYW1lOiAiTG9naW4iLAogICAgcmVnaXN0cmF0aW9uU3VjY2Vzczoge30sCiAgICB1c2VyRGF0YTogewogICAgICBuYW1lOiAiIiwKICAgICAgZm5hbWU6ICIiLAogICAgICBsbmFtZTogIiIsCiAgICAgIGVtYWlsOiAiIiwKICAgICAgaXNBZG1pbjogIiIKICAgIH0sCiAgICAvLyBhdXRoZW50aWNhdGlvbiB2YXJpYWJsZXMKICAgIHRva2VuOiBUb2tlblNlcnZpY2UuZ2V0VG9rZW4oKSwKICAgIHJlZnJlc2hUb2tlbjogIiIsCiAgICBhY2Nlc3NUb2tlbjogIiIKICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlX25hbWU6IGZ1bmN0aW9uIHVwZGF0ZV9uYW1lKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnZpZXdfbmFtZSA9IHBheWxvYWQ7CiAgICB9LAogICAgbG9naW5TdWNjZXNzOiBmdW5jdGlvbiBsb2dpblN1Y2Nlc3Moc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudG9rZW4gPSBwYXlsb2FkLnRva2VuOwogICAgICBzdGF0ZS5hY2Nlc3NUb2tlbiA9IHBheWxvYWQuYWNjZXNzOwogICAgICBzdGF0ZS5yZWZyZXNoVG9rZW4gPSBwYXlsb2FkLnJlZnJlc2g7CiAgICAgIHN0YXRlLnVzZXJEYXRhLmZuYW1lID0gcGF5bG9hZC5maXJzdF9uYW1lOwogICAgICBzdGF0ZS51c2VyRGF0YS5sbmFtZSA9IHBheWxvYWQubGFzdF9uYW1lOwogICAgICBzdGF0ZS51c2VyRGF0YS5lbWFpbCA9IHBheWxvYWQuZW1haWw7CiAgICAgIHN0YXRlLnVzZXJEYXRhLmlzQWRtaW4gPSBwYXlsb2FkLmlzQWRtaW47CiAgICAgIHN0YXRlLnVzZXJEYXRhLm5hbWUgPSBwYXlsb2FkLm5hbWU7CiAgICB9LAogICAgcmVnaXN0cmF0aW9uU3VjY2VzczogZnVuY3Rpb24gcmVnaXN0cmF0aW9uU3VjY2VzcyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS50b2tlbiA9IHBheWxvYWQudG9rZW47CiAgICAgIHN0YXRlLmFjY2Vzc1Rva2VuID0gcGF5bG9hZC5hY2Nlc3M7CiAgICAgIHN0YXRlLnJlZnJlc2hUb2tlbiA9IHBheWxvYWQucmVmcmVzaDsKICAgICAgc3RhdGUudXNlckRhdGEuZm5hbWUgPSBwYXlsb2FkLmZpcnN0X25hbWU7CiAgICAgIHN0YXRlLnVzZXJEYXRhLmxuYW1lID0gcGF5bG9hZC5sYXN0X25hbWU7CiAgICAgIHN0YXRlLnVzZXJEYXRhLmVtYWlsID0gcGF5bG9hZC5lbWFpbDsKICAgICAgc3RhdGUudXNlckRhdGEuaXNBZG1pbiA9IHBheWxvYWQuaXNBZG1pbjsKICAgICAgc3RhdGUudXNlckRhdGEubmFtZSA9IHBheWxvYWQubmFtZTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldF92aWV3X25hbWU6IGZ1bmN0aW9uIGdldF92aWV3X25hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnZpZXdfbmFtZTsKICAgIH0sCiAgICBnZXRfdXNlcl9kYXRhOiBmdW5jdGlvbiBnZXRfdXNlcl9kYXRhKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyRGF0YTsKICAgIH0sCiAgICBnZXRfdG9rZW46IGZ1bmN0aW9uIGdldF90b2tlbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudG9rZW47CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHRva2VuOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBMb2dpblNlcnZpY2UubG9naW5Vc2VyKHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoImxvZ2luU3VjY2VzcyIsIHRva2VuKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRva2VuKTsKCiAgICAgICAgICAgICAgICBpZiAodG9rZW4ucmVmcmVzaCAhPSAiIikgewogICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCgnL3dlbGNvbWUnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjIsIHVzZXIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBSZWdpc3RlclNlcnZpY2UucmVnaXN0ZXJVc2VyKHVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdyZWdpc3RyYXRpb25TdWNjZXNzJywgdG9rZW4pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codG9rZW4pOwoKICAgICAgICAgICAgICAgIGlmICh0b2tlbi5yZWZyZXNoICE9ICIiKSB7CiAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvd2VsY29tZScpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiY29uc29sZSBmcm9tIHJlZ2lzdGVyIHN0b3JlIiwgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gTG9nb3V0U2VydmljZS5sb2dvdXRVc2VyKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMudDApOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/store/index.js"],"names":["Vue","Vuex","RegisterService","LoginService","LogoutService","TokenService","router","use","Store","state","view_name","registrationSuccess","userData","name","fname","lname","email","isAdmin","token","getToken","refreshToken","accessToken","mutations","update_name","payload","loginSuccess","access","refresh","first_name","last_name","getters","get_view_name","get_user_data","get_token","actions","login","commit","loginUser","console","log","push","register","user","registerUser","logout","logoutUser","res"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport  RegisterService  from '../services/register'\nimport  LoginService  from '../services/login'\nimport  LogoutService  from '../services/logout'\nimport TokenService from '../services/storage'\nimport router from '../router'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    view_name: \"Login\",\n    registrationSuccess:{},\n    userData:{\n      name:\"\",\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      isAdmin: \"\"\n    },\n\n    // authentication variables\n    token: TokenService.getToken(),\n    refreshToken: \"\",\n    accessToken: \"\"\n  },\n  mutations: {\n\n    update_name (state, payload){\n      state.view_name = payload\n    },\n\n    loginSuccess(state, payload){\n      state.token = payload.token\n      state.accessToken = payload.access\n      state.refreshToken = payload.refresh\n      state.userData.fname = payload.first_name\n      state.userData.lname = payload.last_name\n      state.userData.email = payload.email\n      state.userData.isAdmin = payload.isAdmin\n      state.userData.name = payload.name\n    },\n\n    registrationSuccess(state, payload){\n      state.token = payload.token\n      state.accessToken = payload.access\n      state.refreshToken = payload.refresh\n      state.userData.fname = payload.first_name\n      state.userData.lname = payload.last_name\n      state.userData.email = payload.email\n      state.userData.isAdmin = payload.isAdmin\n      state.userData.name = payload.name\n    }\n  },\n\n  getters:{\n    get_view_name: (state)=> {\n      return state.view_name\n    },\n    get_user_data(state){\n      return state.userData\n    },\n    get_token(state){\n      return state.token\n    }\n  },\n\n  actions: {\n    async login({ commit }, payload) {\n      try {\n        const token = await LoginService.loginUser(payload)\n        commit(\"loginSuccess\", token)\n        console.log(token)\n        if(token.refresh != \"\" ){\n          router.push('/welcome')\n       }\n        return true\n      } catch (e) {\n        console.log(e)\n        return false\n      }\n    },\n\n    async register({commit},user) {\n      try {\n        const token = await RegisterService.registerUser(user)\n        commit('registrationSuccess', token)\n        console.log(token)\n       if(token.refresh != \"\" ){\n          router.push('/welcome')\n       }\n        return true\n      } catch (e) {\n        console.log(\"console from register store\", e)\n        return false\n      }\n    },\n    \n    async logout() {\n      try{\n        const res = await LogoutService.logoutUser()\n        return res\n      }catch(e){\n        return e\n      }\n\n    },\n  },\n})\n"]}]}