{"remainingRequest":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js??ref--14-0!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/logout.js","dependencies":[{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/logout.js","mtime":1645102509819},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/babel.config.js","mtime":1645102509819},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/cache-loader/dist/cjs.js","mtime":1633440985628},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js","mtime":1636424682299},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js","mtime":1633441000112}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VyYS9EZXNrdG9wL0JyaWRnZUxhYnMvYnJpZGdlbGFicy1vbmJvYXJkaW5nLXRhc2svbG9naW4tbG9nb3V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQXBpU2VydmljZSBmcm9tICcuL2FwaSc7CmltcG9ydCBUb2tlblNlcnZpY2UgZnJvbSAnLi9zdG9yYWdlJzsgLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwoKdmFyIExvZ291dFNlcnZpY2UgPSB7CiAgbG9nb3V0VXNlcjogZnVuY3Rpb24gKCkgewogICAgdmFyIF9sb2dvdXRVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGRhdGEpIHsKICAgICAgdmFyIHJlcXVlc3REYXRhLCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJlcXVlc3REYXRhID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3NpbXBsb3IuaGVyb2t1YXBwLmNvbS9hcGkvdXNlci9sb2dvdXQnLAogICAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UuY3VzdG9tUmVxdWVzdChyZXF1ZXN0RGF0YSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5yZW1vdmVUb2tlbigpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxMF1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBsb2dvdXRVc2VyKF94KSB7CiAgICAgIHJldHVybiBfbG9nb3V0VXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBsb2dvdXRVc2VyOwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCBMb2dvdXRTZXJ2aWNlOw=="},{"version":3,"sources":["/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/logout.js"],"names":["ApiService","TokenService","LogoutService","logoutUser","data","requestData","method","url","customRequest","response","removeToken","console","log"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,WAAzB,C,CACA;;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU;AAAA,8EAAE,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,WADI,GACU;AAClBC,gBAAAA,MAAM,EAAE,MADU;AAElBC,gBAAAA,GAAG,EAAE,+CAFa;AAGlBH,gBAAAA,IAAI,EAAEA;AAHY,eADV;AAAA;AAAA;AAAA,qBASeJ,UAAU,CAACQ,aAAX,CAAyBH,WAAzB,CATf;;AAAA;AASFI,cAAAA,QATE;AAURR,cAAAA,YAAY,CAACS,WAAb;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAXQ,+CAYDA,QAAQ,CAACL,IAZR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADU,CAAtB;AAoBA,eAAeF,aAAf","sourcesContent":["import ApiService from './api'\nimport TokenService from './storage'\n// import axios from 'axios'\n\nconst LogoutService = {\n  logoutUser: async function (data) {\n    const requestData = {\n      method: 'POST',\n      url: 'https://simplor.herokuapp.com/api/user/logout',\n      data: data\n    }\n\n    try {\n      // ApiService.setHeader()\n      const response = await ApiService.customRequest(requestData)\n      TokenService.removeToken()\n      console.log(response)\n      return response.data\n    } catch (error) {\n      return error\n    }\n  }\n}\n\nexport default LogoutService"]}]}