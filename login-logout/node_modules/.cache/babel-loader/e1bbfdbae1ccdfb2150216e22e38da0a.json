{"remainingRequest":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js??ref--14-0!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/register.js","dependencies":[{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/register.js","mtime":1645069289151},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/babel.config.js","mtime":1645069289151},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/cache-loader/dist/cjs.js","mtime":1633440985628},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js","mtime":1636424682299},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js","mtime":1633441000112}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VyYS9EZXNrdG9wL0JyaWRnZUxhYnMvYnJpZGdlbGFicy1vbmJvYXJkaW5nLXRhc2svbG9naW4tbG9nb3V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQXBpU2VydmljZSBmcm9tICcuL2FwaSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBUb2tlblNlcnZpY2UgZnJvbSAnLi9zdG9yYWdlJzsKdmFyIFJlZ2lzdGVyU2VydmljZSA9IHsKICByZWdpc3RlclVzZXI6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcmVnaXN0ZXJVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGRhdGEpIHsKICAgICAgdmFyIHJlcXVlc3REYXRhLCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJlcXVlc3REYXRhID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3NpbXBsb3IuaGVyb2t1YXBwLmNvbS9hcGkvdXNlci9yZWdpc3RlcicsCiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQ29udGVudC1UeXBlJ10gPSAnbXVsdGlwYXJ0L2Zvcm0tZGF0YSc7IC8vIEFwaVNlcnZpY2Uuc2V0SGVhZGVyKCkKCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UuY3VzdG9tUmVxdWVzdChyZXF1ZXN0RGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5zYXZlVG9rZW4ocmVzcG9uc2UuZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJjb25zb2xlIGZyb20gcmVnaXN0ZXIgc2VydmljZSIsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDEwXV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIHJlZ2lzdGVyVXNlcihfeCkgewogICAgICByZXR1cm4gX3JlZ2lzdGVyVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiByZWdpc3RlclVzZXI7CiAgfSgpCn07CmV4cG9ydCBkZWZhdWx0IFJlZ2lzdGVyU2VydmljZTs="},{"version":3,"sources":["/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/register.js"],"names":["ApiService","axios","TokenService","RegisterService","registerUser","data","requestData","method","url","defaults","headers","common","customRequest","response","saveToken","token","console","log"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,IAAMC,eAAe,GAAG;AAEtBC,EAAAA,YAAY;AAAA,gFAAE,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,cAAAA,WADM,GACQ;AAClBC,gBAAAA,MAAM,EAAE,MADU;AAElBC,gBAAAA,GAAG,EAAE,iDAFa;AAGlBH,gBAAAA,IAAI,EAAEA;AAHY,eADR;AAAA;AAQVJ,cAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgD,qBAAhD,CARU,CASV;;AATU;AAAA,qBAUaX,UAAU,CAACY,aAAX,CAAyBN,WAAzB,CAVb;;AAAA;AAUJO,cAAAA,QAVI;AAWVX,cAAAA,YAAY,CAACY,SAAb,CAAuBD,QAAQ,CAACR,IAAT,CAAcU,KAArC;AAXU,+CAYHF,QAAQ,CAACR,IAZN;;AAAA;AAAA;AAAA;AAcVW,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAdU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFU,CAAxB;AAsBA,eAAed,eAAf","sourcesContent":["import ApiService from './api'\nimport axios from 'axios'\nimport TokenService from './storage'\n\nconst RegisterService = {\n    \n  registerUser: async function (data) {\n    const requestData = {\n      method: 'POST',\n      url: 'https://simplor.herokuapp.com/api/user/register',\n      data: data\n    }\n\n    try {\n      axios.defaults.headers.common['Content-Type'] = 'multipart/form-data'\n      // ApiService.setHeader()\n      const response = await ApiService.customRequest(requestData)\n      TokenService.saveToken(response.data.token)\n      return response.data\n    } catch (error) {\n      console.log(\"console from register service\", error)\n      return error\n    }\n  }\n}\n\nexport default RegisterService"]}]}