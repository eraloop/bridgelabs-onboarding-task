{"remainingRequest":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js??ref--14-0!/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/api.js","dependencies":[{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/api.js","mtime":1645069289151},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/babel.config.js","mtime":1645069289151},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/cache-loader/dist/cjs.js","mtime":1633440985628},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/babel-loader/lib/index.js","mtime":1636424682299},{"path":"/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/node_modules/eslint-loader/index.js","mtime":1633441000112}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IFRva2VuU2VydmljZSBmcm9tICcuL3N0b3JhZ2UnCgp2YXIgQXBpU2VydmljZSA9IHsKICBzZXRIZWFkZXI6IGZ1bmN0aW9uIHNldEhlYWRlcigpIHsKICAgIC8vIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7VG9rZW5TZXJ2aWNlLmdldFRva2VuKCl9YAogICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0NvbnRlbnQtVHlwZSddID0gJ211bHRpcGFydC9mb3JtLWRhdGEnOwogIH0sCiAgY3VzdG9tUmVxdWVzdDogZnVuY3Rpb24gY3VzdG9tUmVxdWVzdChkYXRhKSB7CiAgICByZXR1cm4gYXhpb3MoZGF0YSk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBBcGlTZXJ2aWNlOw=="},{"version":3,"sources":["/home/era/Desktop/BridgeLabs/bridgelabs-onboarding-task/login-logout/src/services/api.js"],"names":["axios","ApiService","setHeader","defaults","headers","common","customRequest","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,SADiB,uBACJ;AACX;AACAF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgD,qBAAhD;AACD,GAJgB;AAKjBC,EAAAA,aALiB,yBAKFC,IALE,EAKI;AACnB,WAAOP,KAAK,CAACO,IAAD,CAAZ;AACD;AAPgB,CAAnB;AAUA,eAAeN,UAAf","sourcesContent":["import axios from 'axios'\n// import TokenService from './storage'\n\nconst ApiService = {\n  setHeader () {\n    // axios.defaults.headers.common['Authorization'] = `Bearer ${TokenService.getToken()}`\n    axios.defaults.headers.common['Content-Type'] = 'multipart/form-data'\n  },\n  customRequest (data) {\n    return axios(data)\n  }\n}\n\nexport default ApiService"]}]}